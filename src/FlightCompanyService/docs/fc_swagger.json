{
    "swagger": "2.0",
    "info": {
        "description": "This is an API specification for the FlightCompany services.",
        "title": "FlightCompany Swagger API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "version": "1.0"
    },
    "host": "localhost:8091",
    "basePath": "/",
    "paths": {
        "/airports": {
            "get": {
                "description": "Get a list of all available airports",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Airports"
                ],
                "summary": "Get all airports",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search string to return airports which names contains this substring",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Airport"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/bookings/": {
            "post": {
                "description": "book a flight which can be confirmed or unbooked",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Book a flight",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of origin airport from GET /airports",
                        "name": "origin_airport",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of destination airport from GET /airports",
                        "name": "dest_airport",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "number \u003e 0 of min passengers seats count that need be available",
                        "name": "passengers_count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "string rappresenting the datetime for start filter range",
                        "name": "start_range_datetime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "string rappresenting the datetime for end filter range",
                        "name": "end_range_datetime",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flight has been booked",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.FlightBooking"
                            }
                        }
                    },
                    "400": {
                        "description": "If provided booking is in wrong format"
                    },
                    "500": {
                        "description": "If any error occurred"
                    }
                }
            }
        },
        "/bookings/{bookingID}": {
            "delete": {
                "description": "Unbook a booked flight",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Unbook a flight",
                "parameters": [
                    {
                        "type": "string",
                        "description": "A booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flight has been unbooked"
                    },
                    "400": {
                        "description": "If booking has not been provided"
                    },
                    "404": {
                        "description": "If booking doesn't exist"
                    },
                    "500": {
                        "description": "If any error occurred and flight has not been unbooked"
                    }
                }
            }
        },
        "/bookings/{bookingID}/confirm": {
            "post": {
                "description": "Confirm / pay a booking of flight which was not unconfirmed yet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Confirm a booking",
                "parameters": [
                    {
                        "type": "string",
                        "description": "A booking ID",
                        "name": "bookingID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking has been confirmed"
                    },
                    "400": {
                        "description": "If booking has not been provided"
                    },
                    "404": {
                        "description": "If booking doesn't exist"
                    },
                    "500": {
                        "description": "If any error occurred and flight has not been confirmed"
                    }
                }
            }
        },
        "/flights": {
            "get": {
                "description": "Get a list of all available flights over thr provided filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flight"
                ],
                "summary": "Get all filtered flights",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of origin airport from GET /airports",
                        "name": "origin_airport",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of destination airport from GET /airports",
                        "name": "dest_airport",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "number \u003e 0 of min passengers seats count that need be available",
                        "name": "passengers_count",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "string rappresenting the datetime for start filter range",
                        "name": "start_range_datetime",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "string rappresenting the datetime for end filter range",
                        "name": "end_range_datetime",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entities.Flight"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "entities.Airport": {
            "type": "object",
            "properties": {
                "airport_id": {
                    "type": "string",
                    "example": "5"
                },
                "city": {
                    "type": "string",
                    "example": "Bologna"
                },
                "name": {
                    "type": "string",
                    "example": "Aeroporto di Bologna-Guglielmo Marconi"
                }
            }
        },
        "entities.Flight": {
            "type": "object",
            "properties": {
                "airport_destination_id": {
                    "type": "string",
                    "example": "20"
                },
                "airport_origin_id": {
                    "type": "string",
                    "example": "5"
                },
                "arrival_datetime": {
                    "type": "string",
                    "example": "2024-01-10 05:30:00"
                },
                "available_seats_count": {
                    "type": "integer",
                    "example": 2
                },
                "depart_datetime": {
                    "type": "string",
                    "example": "2024-01-01 14:00:00"
                },
                "flight_id": {
                    "type": "string",
                    "example": "1"
                },
                "flight_price": {
                    "type": "number",
                    "example": 199.99
                }
            }
        },
        "entities.FlightBooking": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "type": "integer",
                    "example": 101
                },
                "customer_name": {
                    "type": "string",
                    "example": "Mario"
                },
                "customer_surname": {
                    "type": "string",
                    "example": "Rossi"
                },
                "flight_id": {
                    "type": "integer",
                    "example": 2
                },
                "passengers_count": {
                    "type": "integer",
                    "example": 2
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}